{
	"compiler": {
		"version": "0.6.12+commit.27d51765"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "contract IUniFactory",
						"name": "_uniswapFactory",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "lpToken",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "lockDate",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "unlockDate",
						"type": "uint256"
					}
				],
				"name": "onDeposit",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "lpToken",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "onWithdraw",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "gFees",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "ethFee",
						"type": "uint256"
					},
					{
						"internalType": "contract IERCBurn",
						"name": "secondaryFeeToken",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "secondaryTokenFee",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "secondaryTokenDiscount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "liquidityFee",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "referralPercent",
						"type": "uint256"
					},
					{
						"internalType": "contract IERCBurn",
						"name": "referralToken",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "referralHold",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "referralDiscount",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_index",
						"type": "uint256"
					}
				],
				"name": "getLockedTokenAtIndex",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getNumLockedTokens",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_lpToken",
						"type": "address"
					}
				],
				"name": "getNumLocksForToken",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_user",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_lpToken",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_index",
						"type": "uint256"
					}
				],
				"name": "getUserLockForTokenAtIndex",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_user",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_index",
						"type": "uint256"
					}
				],
				"name": "getUserLockedTokenAtIndex",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_user",
						"type": "address"
					}
				],
				"name": "getUserNumLockedTokens",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_user",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_lpToken",
						"type": "address"
					}
				],
				"name": "getUserNumLocksForToken",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_user",
						"type": "address"
					}
				],
				"name": "getUserWhitelistStatus",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_index",
						"type": "uint256"
					}
				],
				"name": "getWhitelistedUserAtIndex",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getWhitelistedUsersLength",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_lpToken",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_index",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_lockID",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					}
				],
				"name": "incrementLock",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_lpToken",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_unlock_date",
						"type": "uint256"
					},
					{
						"internalType": "address payable",
						"name": "_referral",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "_fee_in_eth",
						"type": "bool"
					},
					{
						"internalType": "address payable",
						"name": "_withdrawer",
						"type": "address"
					}
				],
				"name": "lockLPToken",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_lpToken",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_index",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_lockID",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					}
				],
				"name": "migrate",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_lpToken",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_index",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_lockID",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_unlock_date",
						"type": "uint256"
					}
				],
				"name": "relock",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address payable",
						"name": "_devaddr",
						"type": "address"
					}
				],
				"name": "setDev",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_referralPercent",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_referralDiscount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_ethFee",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_secondaryTokenFee",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_secondaryTokenDiscount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_liquidityFee",
						"type": "uint256"
					}
				],
				"name": "setFees",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "contract IMigrator",
						"name": "_migrator",
						"type": "address"
					}
				],
				"name": "setMigrator",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "contract IERCBurn",
						"name": "_referralToken",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_hold",
						"type": "uint256"
					}
				],
				"name": "setReferralTokenAndHold",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_secondaryFeeToken",
						"type": "address"
					}
				],
				"name": "setSecondaryFeeToken",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_lpToken",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_index",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_lockID",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					}
				],
				"name": "splitLock",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "tokenLocks",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "lockDate",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "initialAmount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "unlockDate",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "lockID",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_lpToken",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_index",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_lockID",
						"type": "uint256"
					},
					{
						"internalType": "address payable",
						"name": "_newOwner",
						"type": "address"
					}
				],
				"name": "transferLockOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "uniswapFactory",
				"outputs": [
					{
						"internalType": "contract IUniFactory",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_user",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "_add",
						"type": "bool"
					}
				],
				"name": "whitelistFeeAccount",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_lpToken",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_index",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_lockID",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					}
				],
				"name": "withdraw",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"lockLPToken(address,uint256,uint256,address,bool,address)": {
					"params": {
						"_amount": "amount of LP tokens to lock",
						"_fee_in_eth": "fees can be paid in eth or in a secondary token such as UNCX with a discount on univ2 tokens",
						"_lpToken": "the univ2 token address",
						"_referral": "the referrer address if any or address(0) for none",
						"_unlock_date": "the unix timestamp (in seconds) until unlock",
						"_withdrawer": "the user who can withdraw liquidity once the lock expires."
					}
				},
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"incrementLock(address,uint256,uint256,uint256)": {
					"notice": "increase the amount of tokens per a specific lock, this is preferable to creating a new lock, less fees, and faster loading on our live block explorer"
				},
				"lockLPToken(address,uint256,uint256,address,bool,address)": {
					"notice": "Creates a new lock"
				},
				"migrate(address,uint256,uint256,uint256)": {
					"notice": "migrates liquidity to uniswap v3"
				},
				"relock(address,uint256,uint256,uint256)": {
					"notice": "extend a lock with a new unlock date, _index and _lockID ensure the correct lock is changed this prevents errors when a user performs multiple tx per block possibly with varying gas prices"
				},
				"setMigrator(address)": {
					"notice": "set the migrator contract which allows locked lp tokens to be migrated to uniswap v3"
				},
				"setReferralTokenAndHold(address,uint256)": {
					"notice": "referrers need to hold the specified token and hold amount to be elegible for referral fees"
				},
				"splitLock(address,uint256,uint256,uint256)": {
					"notice": "split a lock into two seperate locks, useful when a lock is about to expire and youd like to relock a portion and withdraw a smaller portion"
				},
				"transferLockOwnership(address,uint256,uint256,address)": {
					"notice": "transfer a lock to a new owner, e.g. presale project -> project owner"
				},
				"whitelistFeeAccount(address,bool)": {
					"notice": "whitelisted accounts dont pay flatrate fees on locking"
				},
				"withdraw(address,uint256,uint256,uint256)": {
					"notice": "withdraw a specified amount from a lock. _index and _lockID ensure the correct lock is changed this prevents errors when a user performs multiple tx per block possibly with varying gas prices"
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"ethereum/UniswapV2Locker.sol": "UniswapV2Locker"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"common/Context.sol": {
			"keccak256": "0x810fd58f2a705e73b50a33bdd16a82860660d3443c5a554574a0ec026c0e30d3",
			"license": "MIT",
			"urls": [
				"bzz-raw://74ac46950367d905471fce4f3f9c8e8ad2aa788436cad298241b5f525b86c6aa",
				"dweb:/ipfs/QmUS8CwkKsX5SgyL5RraP2Mn5kXytJH7ykFwGaytW7fiWJ"
			]
		},
		"common/EnumerableSet.sol": {
			"keccak256": "0x7e5e7e78e53ec809db6f4b3563848b40a3ab2047f38868705dfa82e6535028d0",
			"license": "MIT",
			"urls": [
				"bzz-raw://8b69e9da309d8448307ca6b0348ef315b6149730527eef01fb6c907a18cd62bd",
				"dweb:/ipfs/QmPCNnFyiwfpcF4pyCJrkW44F2mM3r1F71QbNzF9xUwubo"
			]
		},
		"common/Ownable.sol": {
			"keccak256": "0xc9b2138d88be363013ba17cab0528699573e03cc864b6e1d47bd1fbae7c5acd8",
			"license": "MIT",
			"urls": [
				"bzz-raw://ac4e6116cdad07d8b42df5c1f9c30c0ef25167c89dd3a346eb4f205ced8bc2f6",
				"dweb:/ipfs/QmRTNPBxKs1brtWsPTWPWZGeeEYrozkRAMfJ9mNHQw8gu4"
			]
		},
		"common/ReentrancyGuard.sol": {
			"keccak256": "0x5ca31ca2d9a618e3a15b2c65d8157f5e449b77b311357506024ec1df1131736c",
			"license": "MIT",
			"urls": [
				"bzz-raw://d2bfde2a020fb4ef795593461639939518da7d670a553eee8e36ac62f8e4e367",
				"dweb:/ipfs/QmUyAv1qCMywo8WYVJk3XRmVPeNpxT6iXujDeqgSxhi6jM"
			]
		},
		"common/SafeMath.sol": {
			"keccak256": "0x171c2bdf89bcc4fbd2656423f512a1cb6429c3d8ecec0526d86ac32015892334",
			"license": "MIT",
			"urls": [
				"bzz-raw://9a6a55b166197d166276103f7e6c8c66a8d22d1699a13f745c9680cf9af0f427",
				"dweb:/ipfs/QmbBVXVAcMxvE7eNkXhRANGnmzcBVxCb8MNq34sUfBVjmh"
			]
		},
		"common/TransferHelper.sol": {
			"keccak256": "0x0f722fb690c455df4d5e12938b7c818b596f62cfe69624fd23ed5bcba67a0f71",
			"license": "MIT",
			"urls": [
				"bzz-raw://c79749cf5231f56c1d381fc8493502d3a80c6b3c73a817d9535159060c0d93e4",
				"dweb:/ipfs/QmVeGgstwsadDKHMju1XevVpHHU6Wgp37c2oPxb8sQFQbb"
			]
		},
		"ethereum/UniswapV2Locker.sol": {
			"keccak256": "0x87f79838d69acf9928dfd04aff37d2ac59fec4bec2c17a4c966cc16ea10d1845",
			"license": "UNLICENSED",
			"urls": [
				"bzz-raw://a0022f88bf23066c0fc780c32759d15e9322f6b4aaecffc9e56fe3f00cad2762",
				"dweb:/ipfs/QmZkrLLLqS4nz45y8nNuuDC6QL8rub9yngK5XSu4u7TzL6"
			]
		}
	},
	"version": 1
}